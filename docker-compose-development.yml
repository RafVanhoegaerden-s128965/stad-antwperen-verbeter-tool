services:
    traefik:
        image: traefik:v3.0
        container_name: stad-antwerpen-traefik
        env_file: .env
        command:
            - --api.dashboard=true
            - --api.insecure=false
            - --providers.docker=true
            - --providers.docker.exposedByDefault=false
            - --entrypoints.web.address=:80
            - --entrypoints.web.http.redirections.entrypoint.to=websecure
            - --entryPoints.web.http.redirections.entrypoint.scheme=https
            - --entrypoints.websecure.address=:443
            - --entrypoints.websecure.asDefault=true
            - --entrypoints.websecure.http.tls.certresolver=myresolver
            - --certificatesresolvers.myresolver.acme.email=$TRAEFIK_LETSENCRYPT_EMAIL
            - --certificatesresolvers.myresolver.acme.tlschallenge=true
            - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
            - --log.level=INFO
        ports:
            - 80:80
            - 443:443
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - letsencrypt-volume:/letsencrypt
        labels:
            - traefik.enable=true
            - traefik.http.routers.mydashboard.rule=Host(`$TRAEFIK_DASHBOARD_URL`)
            - traefik.http.routers.mydashboard.service=api@internal
            - traefik.http.routers.mydashboard.middlewares=myauth
            - traefik.http.middlewares.myauth.basicauth.users=$TRAEFIK_DASHBOARD_USER
        networks:
            - scraper

    frontend:
        container_name: stad-antwerpen-frontend
        build: ./frontend
        depends_on:
            - backend
        env_file: .env
        labels:
            - traefik.enable=true
            - traefik.http.routers.frontend.rule=Host(`$APP_URL`)
        networks:
            - scraper

    backend:
        container_name: stad-antwerpen-backend
        build: ./backend
        env_file: .env
        labels:
            - traefik.enable=true
            - traefik.http.routers.backend.rule=Host(`$APP_URL`) && PathPrefix(`/api`)
            - traefik.http.routers.backend.entrypoints=websecure
            - traefik.http.routers.backend.tls=true
            - traefik.http.services.backend.loadbalancer.server.port=8000
            - traefik.http.routers.backend-internal.rule=Host(`antwerpen.localhost`)
        ports:
            - 8000:8000
        networks:
            - scraper

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
        container_name: stad-antwerpen-elasticsearch
        environment:
            - discovery.type=single-node
            - xpack.security.enabled=false
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:9200"]
            interval: 10s
            timeout: 5s
            retries: 5
        labels:
            - traefik.enable=true
            - traefik.http.routers.elasticsearch.rule=Host(`elasticsearch.${APP_URL}`)
            - traefik.http.routers.elasticsearch.entrypoints=websecure
            - traefik.http.routers.elasticsearch.tls=true
            - traefik.http.services.elasticsearch.loadbalancer.server.port=9200
        ports:
            - 9200:9200
        volumes:
            - es-data:/usr/share/elasticsearch/data
        networks:
            - scraper

volumes:
    letsencrypt-volume:
    es-data:

networks:
    scraper:
        driver: bridge
